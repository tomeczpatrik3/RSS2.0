-- BUILDING:

	-- GET:
	
		Név:		getAll()
		Url: 		/api/building/
		Feladat:	A függvény ami visszaadja egy listában az összes adatbázisban található épületet
		
		Név:		getNames()
		Url: 		/api/building/getNames
		Feladat:	A függvény ami visszaadja egy listában az összes adatbázisban található épület nevét
		
		Név:		findByName()
		Url: 		/api/building/findByName/{name}
		Feladat:	A függvény ami visszaadja az adott névhez tartozó épületet
		
		Név:		findById()
		Url: 		/api/building/findById/{id}
		Feladat:	A függvény ami visszaadja az adott azonosítóhoz tartozó épületet	
		
	-- POST:

		Név:		createBuilding()
		Url: 		/api/building/createBuilding
		Feladat:	A függvény ami létrehozza a megfelelő épületet

		Név:		deleteByName()
		Url: 		/api/building/deleteByName/{name}
		Feladat:	A függvény ami törli az adott névhez tartozó épületet
		
-- CLASSROOM:

	-- GET:
	
		Név:		getAll()
		Url: 		/api/classroom/
		Feladat:	A függvény ami visszaadja egy listában az összes adatbázisban található termet
		
		Név:		findByName()
		Url: 		/api/classroom/findByName/{name}
		Feladat:	A függvény ami visszaadja egy listában az adott névvel rendelkező termeket
		
		Név:		findByBuildingName()
		Url: 		/api/classroom/findByBuildingName/{buildingName}
		Feladat:	A függvény ami visszaadja az adott épülethez tartozó termeket
		
		Név:		findByHasPC()
		Url: 		/api/classroom/findByHasPC/{hasPC}
		Feladat:	A függvény ami visszaadja a PC-vel rendelkező (vagy nem rendelkező) termeket

		Név:		findByHasProjector()
		Url: 		/api/classroom/findByHasProjector/{hasProjector}
		Feladat:	A függvény ami visszaadja a projektorral rendelkező (vagy nem rendelkező) termeket

		Név:		findByChairsLessThan()
		Url: 		/api/classroom/findByChairsLessThan/{chair}
		Feladat:	A függvény ami visszaadja egy adott számnál kevesebb székkel rendelkező termeket

		Név:		findByChairsGreaterThan()
		Url: 		/api/classroom/findByChairsGreaterThan/{chair}
		Feladat:	A függvény ami visszaadja egy adott számnál több székkel rendelkező termeket

		Név:		findByChairsBetween()
		Url: 		/api/classroom/findByChairsBetween
		Feladat:	A függvény ami visszaadja két adott szám közötti székkel rendelkező termeket
		
	-- POST:

		Név:		createClassroom()
		Url: 		/api/classroom/createClassroom
		Feladat:	A függvény ami létrehozza a megfelelő termet

		Név:		deleteByRoomName()
		Url: 		/api/classroom/deleteByRoomName/{name}
		Feladat:	A függvény ami törli az adott névhez tartozó termet
		
		Név:		updateClassroom()
		Url: 		/api/classroom/updateClassroom
		Feladat:	A függvény ami firssíti a megfelelő termet	
		
-- RESERVATION:

	-- GET:
	
		Név:		getAccepted()
		Url: 		/api/reservation/
		Feladat:	A függvény ami visszaadja az elfogadott foglalásokat
		
		Név:		findByUsername()
		Url: 		/api/reservation/findByUsername/{username}
		Feladat:	A függvény ami visszaadja az adott felhasználónévhez tartozó foglalásokat
		
		Név:		findByStatus()
		Url: 		/api/reservation/findByStatus/{status}
		Feladat:	A függvény ami visszaadja az adott státusszal rendelkező foglalásokat
		
		Név:		findByClassroomAndDate()
		Url: 		/api/reservation/findByClassroomAndDate
		Feladat:	A függvény ami visszaadja az adott teremhez és időponthoz tartozó foglalásokat

		Név:		setStatus()
		Url: 		/api/reservation/setStatus
		Feladat:	A megfelelő foglalás státuszát állítja be
		
-- SIMPLE RESERVATION:

	-- POST:

		Név:		createReservation()
		Url: 		/api/simpleReservation/createReservation
		Feladat:	A függvény ami létrehozza a megfelelő egyszerű foglalást
		
-- SEMESTER RESERVATION:

	-- POST:

		Név:		createReservation()
		Url: 		/api/semesterReservation/createReservation
		Feladat:	A függvény ami létrehozza a megfelelő, szemeszterre vonatkozó foglalást
		
-- EVENT RESERVATION:

	-- POST:
		
		Név:		createReservation()
		Url: 		/api/eventReservation/createReservation
		Feladat:	A függvény ami létrehozza a megfelelő, eseményre vonatkozó foglalást	
		
		
-- SEMESTER:

	-- GET:
	
		Név:		getAll()
		Url: 		/api/semester/
		Feladat:	A függvény ami visszaadja egy listában az összes adatbázisban található szemesztert
		
		Név:		getSemesterNames()
		Url: 		/api/semester/getSemesterNames
		Feladat:	A függvény ami visszaadja egy listában az szemeszterek neveit
		
	-- POST:

		Név:		createSemester()
		Url: 		/api/semester/createSemester
		Feladat:	A függvény ami létrehozza a megfelelő szemesztert

		Név:		deleteByName()
		Url: 		/api/semester/deleteByName
		Feladat:	A függvény ami törli az adott névhez tartozó szemesztert		
		
-- SUBJECT:

	-- GET:
	
		Név:		getAll()
		Url: 		/api/semester/
		Feladat:	A függvény ami visszaadja egy listában az összes adatbázisban található tantárgyat
		
		Név:		getSubjectNames()
		Url: 		/api/semester/getSubjectNames
		Feladat:	A függvény ami visszaadja egy listában a tantárgyak neveit
		
	-- POST:

		Név:		createSubject()
		Url: 		/api/semester/createSubject
		Feladat:	A függvény ami létrehozza a megfelelő tantárgyat
		
		Név:		updateSubject()
		Url: 		/api/semester/updateSubject
		Feladat:	A függvény ami firssíti a megfelelő tantárgyat

		Név:		deleteByCode()
		Url: 		/api/semester/deleteByCode
		Feladat:	A függvény ami törli az adott kódhoz tartozó tantárgyat			
		
-- TYPE:

	-- GET:
	
		Név:		getAll()
		Url: 		/api/type/
		Feladat:	A függvény ami visszaadja egy listában az összes adatbázisban található típust
		
	-- POST:

		Név:		createType()
		Url: 		/api/type/createType
		Feladat:	A függvény ami létrehozza a megfelelő típust

		Név:		deleteByName()
		Url: 		/api/type/deleteByName
		Feladat:	A függvény ami törli az adott névhez tartozó típust		

-- USER:

	-- GET:
	
		Név:		getAll()
		Url: 		/api/user/
		Feladat:	A függvény ami visszaadja egy listában az összes adatbázisban található felhasználót
		
		Név:		getNames()
		Url: 		/api/user/getNames
		Feladat:	A függvény ami visszaadja egy listában az összes adatbázisban található felhasználó nevét
		
		Név:		findByUsername()
		Url: 		/api/user/getSubjectNames
		Feladat:	A függvény ami visszaadja a felhasználónévhez tartozó felhasználót
		
		Név:		findByName()
		Url: 		/api/user/findByName
		Feladat:	A függvény ami visszaadja egy listában az adott nevű felhasználókat
		
	-- POST:

		Név:		createUser()
		Url: 		/api/user/createUser
		Feladat:	A függvény ami létrehozza a megfelelő felhasználót
		
		Név:		updateUser()
		Url: 		/api/user/updateUser
		Feladat:	A függvény ami firssíti a megfelelő felhasználót

		Név:		deleteByUsername()
		Url: 		/api/user/deleteByUsername
		Feladat:	A függvény ami törli az adott felhasználónévhez tartozó felhasználót					
		
		
		
		
		
		
		
		
		
		
		
		
		
		